<?php

namespace Phramework\Validate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015 - 2016-10-05 at 22:11:07.
 */
class EnumValidatorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var EnumValidator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new EnumValidator(['1', '2', [1, 2, 3], 'ok', 5], true);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function validateSuccessProvider()
    {
        //input, expected
        return [
            ['1', '1'],
            ['2', '2'],
            ['ok', 'ok'],
            [5, 5],
            [[1, 2, 3], [1, 2, 3]],
        ];
    }

    public function validateFailureProvider()
    {
        //input
        return [
            [1],
            [2],
            ['5'],
            [4],
            ['7'],
            ['string'],
        ];
    }

    /**
     * @covers Phramework\Validate\EnumValidator::__construct
     */
    public function testConstruct()
    {
        $validator = new EnumValidator(
            ['1', '2', 'ok', 5],
            true
        );
    }

    /**
     * @dataProvider validateSuccessProvider
     * @covers Phramework\Validate\EnumValidator::validate
     */
    public function testValidateSuccess($input, $expected)
    {
        $return = $this->object->validate($input);

        $this->assertTrue($return->status);
        $this->assertSame($expected, $return->value);
    }

    /**
     * @dataProvider validateFailureProvider
     * @covers Phramework\Validate\EnumValidator::validate
     */
    public function testValidateFailure($input)
    {
        $return = $this->object->validate($input);

        $this->assertFalse($return->status);
    }

    /**
     * @covers Phramework\Validate\EnumValidator::createFromJSON
     */
    public function testCreateFromJSON()
    {
        $json = '{
            "type": "enum"
        }';

        $validationObject = BaseValidator::createFromJSON($json);

        $this->assertInstanceOf(EnumValidator::class, $validationObject);
    }

    /**
     * @covers Phramework\Validate\EnumValidator::getType
     */
    public function testGetType()
    {
        $this->assertEquals('enum', $this->object->getType());
    }
}
